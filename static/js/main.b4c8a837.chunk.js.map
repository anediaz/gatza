{"version":3,"sources":["components/Menu.js","components/Loader.js","components/Gallery.js","constants/constants.js","services/FlickrAPI.js","components/PhotoLoader.js","screens/Page.js","serviceWorker.js","index.js"],"names":["Wrapper","styled","div","Container","ul","Element","li","props","className","Menu","items","map","item","index","key","to","path","activeClassName","exact","text","rotateCircle","keyframes","Circle","Circle1","Circle2","Circle3","Loader","LineContainer","margin","height","Item","img","getChosenConfiguration","configurations","width","propsConfiguration","find","minWidth","maxWidth","cols","Gallery","photos","photoInfos","withLightbox","ref","useRef","useState","selectedImgId","setSelectedImgId","window","screen","configuration","setConfiguration","getWidth","current","offsetWidth","useEffect","handleResize","_","debounce","addEventListener","removeEventListener","getLineHeight","screenWidth","photoWidth","photoHeight","ratioSum","forEach","p","chunks","newPhotos","length","chunkPhotos","splice","push","lineHeight","getChunks","Ligthbox","lazy","chunk","chunkIndex","imgIndex","src","default","alt","onClick","fallback","big","onClose","onNext","onPrev","defaultProps","FLICKR","getUrl","photoSetId","sizes","getPhotos","size","a","async","fetch","response","ok","json","photoset","photo","Error","def","url","urlsBySize","PhotoLoader","photosetId","setPhotos","FlickrAPI","then","result","error","console","log","PageWrapper","Header","Logo","LogoTitle","Page","photosets","setPhotosets","Liburua","Berriak","Info","menu","render","home","component","makingof","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4c8a837.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  margin-top: 4rem;\n  text-align: center;\n  @media (max-width: 768px) {\n    margin-top: 2rem;\n  }\n  @media (min-width: 1920px) {\n    margin-top: 15rem;\n  }\n`;\nconst Container = styled.ul`\n  display: block;\n  padding: 0;\n  margin: 0 auto;\n`;\n\nconst Element = styled.li`\n  display: inline-block;\n  position: relative;\n  z-index: 100;\n  a {\n    font-size: 1.3rem;\n    text-decoration: none;\n    padding: 0.5rem 3rem;\n    display: block;\n\n    -webkit-transition: all 0.2s ease-in-out 0s;\n    -moz-transition: all 0.2s ease-in-out 0s;\n    -o-transition: all 0.2s ease-in-out 0s;\n    -ms-transition: all 0.2s ease-in-out 0s;\n    transition: all 0.2s ease-in-out 0s;\n    color: ${props => (props.className === \"active\" ? \"black\" : \"white\")};\n    background: ${props => (props.className === \"active\" ? \"white\" : \"\")};\n    &.active,\n    &:hover {\n      color: black;\n      background: white;\n    }\n    @media (max-width: 768px) {\n      font-size: 0.6rem;\n      font-weight: 200;\n      padding: 0.5rem 0.8rem;\n    }\n    @media (min-width: 1920px) {\n      font-size: 3rem;\n      padding: 0.5rem 10rem;\n    }\n  }\n`;\n\nconst Menu = ({ items }) => (\n  <Wrapper>\n    <Container>\n      {items.map((item, index) => (\n        <Element key={index}>\n          <NavLink to={item.path} activeClassName=\"active\" exact>\n            {item.text}\n          </NavLink>\n        </Element>\n      ))}\n    </Container>\n  </Wrapper>\n);\n\nexport default Menu;\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst rotateCircle = keyframes`\n  0%{\n    transform: rotate(0deg);\n  }\n  50%{\n    transform: rotate(360deg);\n  }\n  100%{\n    transform: rotate(720deg);\n  }\n`;\n\nconst Circle = styled.div`\n  position: absolute;\n  border: 0.1rem solid;\n  border-radius: 50%;\n  float: left;\n`;\n\nconst Circle1 = styled(Circle)`\n  height: 3rem;\n  width: 3rem;\n  left: calc(50% - 1.5rem);\n  top: calc(50% - 1.5rem);\n  border-color: deepskyblue;\n  border-left: none;\n  animation: ${rotateCircle} 8s linear infinite;\n`;\n\nconst Circle2 = styled(Circle)`\n  height: 2rem;\n  width: 2rem;\n  left: calc(50% - 1rem);\n  top: calc(50% - 1rem);\n  border-color: deeppink;\n  border-top: none;\n  animation: ${rotateCircle} 3s linear infinite;\n`;\n\nconst Circle3 = styled(Circle)`\n  height: 1rem;\n  width: 1rem;\n  left: calc(50% - 0.5rem);\n  top: calc(50% - 0.5rem);\n  border-color: lightseagreen;\n  border-right: none;\n  animation: ${rotateCircle} 5s linear infinite;\n`;\nconst Loader = () => (\n  <div className=\"Loader\">\n    <Circle1 />\n    <Circle2 />\n    <Circle3 />\n  </div>\n);\n\nexport default Loader;\n","import React, {\n  Fragment,\n  useState,\n  useEffect,\n  useRef,\n  lazy,\n  Suspense\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"underscore\";\nimport styled from \"styled-components\";\nimport Loader from \"./Loader\";\n\nconst propTypes = {\n  configurations: PropTypes.arrayOf(\n    PropTypes.shape({\n      minWidth: PropTypes.number,\n      maxWidth: PropTypes.number,\n      cols: PropTypes.number,\n      margin: PropTypes.number\n    })\n  ),\n  photos: PropTypes.array,\n  photoInfos: PropTypes.shape({\n    default: PropTypes.string.isRequired,\n    big: PropTypes.string.isRequired,\n    width: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired\n  }).isRequired,\n  withLightbox: PropTypes.bool\n};\n\nconst defaultProps = {\n  configurations: [\n    { maxWidth: 340, cols: 4, margin: 1 },\n    { maxWidth: 1024, cols: 6, margin: 1 },\n    { minWidth: 1025, cols: 12, margin: 1 }\n  ],\n  withLightbox: true\n};\n\nconst Wrapper = styled.div`\n  margin-top: 0.2rem;\n  width: 100%;\n`;\n\nconst LineContainer = styled.div`\n  width: 100%;\n  margin: ${props => `${props.margin}px 0`};\n  display: flex;\n  justify-content: space-evenly;\n  text-align: center;\n  height: ${props => `${props.height}px`};\n`;\n\nconst Item = styled.img`\n  height: 100%\n    &:hover {\n    cursor: pointer;\n    opacity: 0.5;\n  }\n`;\n\nconst DEFAULT_COLS = 7;\nconst DEFAULT_MARGIN = 1;\n\nconst getChosenConfiguration = (configurations, width) => {\n  const propsConfiguration = configurations.find(\n    ({ minWidth, maxWidth }) =>\n      ((minWidth && minWidth <= width) || !minWidth) &&\n      ((maxWidth && maxWidth >= width) || !maxWidth)\n  );\n  return {\n    width,\n    cols: propsConfiguration.cols || DEFAULT_COLS,\n    margin: propsConfiguration.margin || DEFAULT_MARGIN\n  };\n};\n\nconst Gallery = ({ photos, photoInfos, configurations, withLightbox }) => {\n  const ref = useRef(null);\n  const [selectedImgId, setSelectedImgId] = useState(null);\n  const [configuration, setConfiguration] = useState(\n    getChosenConfiguration(configurations, window.screen.width)\n  );\n\n  const getWidth = () => {\n    return ref.current.offsetWidth || 0;\n  };\n  useEffect(() => {\n    const handleResize = _.debounce(\n      () =>\n        setConfiguration(getChosenConfiguration(configurations, getWidth())),\n      400\n    );\n    window.addEventListener(\"resize\", handleResize);\n    setConfiguration(getChosenConfiguration(configurations, getWidth()));\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, [configurations]);\n\n  const closeLightbox = () => setSelectedImgId(null);\n  const next = () =>\n    selectedImgId < photos.length ? setSelectedImgId(selectedImgId + 1) : null;\n  const prev = () =>\n    selectedImgId > 0 ? setSelectedImgId(selectedImgId - 1) : null;\n  const displayLightbox = index =>\n    index !== null && photos.length >= index && photos[index]\n      ? photos[index][photoInfos.big]\n      : null;\n\n  const getLineHeight = photos => {\n    const { width: screenWidth, cols, margin } = configuration;\n    const { width: photoWidth, height: photoHeight } = photoInfos;\n    let ratioSum = 0;\n    photos.forEach(p => {\n      ratioSum += p[photoWidth] / p[photoHeight];\n    });\n    const marginTotalWidth = cols * margin * 2;\n    // '-1' because screenWith rounds size to up\n    // marginTotalWidth = width to remove to size where images will be placed\n    return (screenWidth - 1 - marginTotalWidth) / ratioSum;\n  };\n\n  const getChunks = photos => {\n    const newPhotos = [...photos];\n    const chunks = [];\n    while (newPhotos.length) {\n      const chunkPhotos = newPhotos.splice(0, configuration.cols);\n      chunks.push({\n        photos: chunkPhotos,\n        lineHeight: getLineHeight(chunkPhotos)\n      });\n    }\n    return chunks;\n  };\n\n  const chunks = getChunks(photos);\n  const Ligthbox = lazy(() => import(\"./Lightbox\"));\n  return (\n    <Wrapper ref={ref}>\n      {photos.length ? (\n        <Fragment>\n          {chunks.map((chunk, chunkIndex) =>\n            chunk.lineHeight ? (\n              <LineContainer\n                height={chunk.lineHeight}\n                margin={configuration.margin}\n                key={`line-${chunkIndex}`}\n              >\n                {chunk.photos.map((p, imgIndex) => {\n                  const index = chunkIndex * configuration.cols + imgIndex;\n                  return (\n                    <Item\n                      src={p[photoInfos.default]}\n                      alt=\"\"\n                      key={`item-${imgIndex}`}\n                      onClick={() => setSelectedImgId(index)}\n                    />\n                  );\n                })}\n              </LineContainer>\n            ) : (\n              <Loader />\n            )\n          )}\n          {withLightbox && selectedImgId !== null && (\n            <Suspense fallback={<Loader />}>\n              <Ligthbox\n                img={displayLightbox(selectedImgId)}\n                onClose={closeLightbox}\n                onNext={photos.length - 1 > selectedImgId ? next : null}\n                onPrev={selectedImgId > 0 ? prev : null}\n              />\n            </Suspense>\n          )}\n        </Fragment>\n      ) : (\n        <Loader />\n      )}\n    </Wrapper>\n  );\n};\n\nGallery.propTypes = propTypes;\nGallery.defaultProps = defaultProps;\nexport default Gallery;\nexport { Wrapper };\n","const url =\n  \"https://api.flickr.com/services/rest/\" +\n  \"?api_key=45cb4d81ed65f5a656f10046b761cc48\" +\n  \"&extras=url_o%2Curl_m%2Curl_c%2Curl_l&format=json\" +\n  \"&method=flickr.photosets.getPhotos&photoset_id=72157670317433475&user_id=114481456%40N05\";\n\nexport const FLICKR = {\n  url2: \"https://api.flickr.com/services/rest/\",\n  url: url,\n  api_key: \"45cb4d81ed65f5a656f10046b761cc48\",\n  user_id: \"114481456@N05\"\n};\n\nexport const EXTRAS = {\n  small320: {\n    url: \"url_n\",\n    width: \"width_n\",\n    height: \"height_n\"\n  },\n  original: { url: \"url_o\", width: \"width_o\", height: \"height_o\" },\n  medium500: { url: \"url_m\", width: \"width_m\", height: \"height_m\" },\n  medium800: { url: \"url_c\", width: \"width_c\", height: \"height_c\" },\n  large1024: { url: \"url_l\", width: \"width_l\", height: \"height_l\" }\n};\n\nexport const ERROR_TYPES = {\n  flickrLoading: \"Photo loading from Flickr\"\n};\n","import { FLICKR } from \"../constants/constants.js\";\n\nconst getUrl = (photoSetId, sizes) =>\n  `https://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=${FLICKR.api_key}&photoset_id=${photoSetId}&extras=${sizes}&format=json&nojsoncallback=true`;\n\nasync function getPhotos(photoSetId, size) {\n  const response = await fetch(getUrl(photoSetId, size));\n  return response && response.ok\n    ? (await response.json()).photoset.photo\n    : { Error: `Error while reading photoset=${photoSetId}` };\n}\n\nexport default {\n  getPhotos\n};\n","import React, { useEffect } from \"react\";\nimport FlickrAPI from \"../services/FlickrAPI\";\nimport { EXTRAS } from \"../constants/constants\";\nimport Gallery from \"./Gallery\";\n\nconst { small320: def, large1024: big } = EXTRAS;\nconst photoInfos = {\n  default: def.url,\n  big: big.url,\n  width: def.width,\n  height: def.height\n};\nconst urlsBySize = `${def.url},${big.url}`;\n\nconst PhotoLoader = ({\n  photosetId,\n  photos = [],\n  setPhotos,\n  configurations\n}) => {\n  useEffect(() => {\n    if (!photos || !photos.length) {\n      FlickrAPI.getPhotos(photosetId, urlsBySize).then(\n        result => setPhotos(photosetId, result),\n        error => console.log(\"error =\" + error)\n      );\n    }\n  });\n\n  return (\n    <Gallery\n      photos={photos}\n      photoInfos={photoInfos}\n      configurations={configurations}\n    />\n  );\n};\n\nexport default PhotoLoader;\n","import React, { useState, Suspense, lazy } from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Menu from \"../components/Menu\";\nimport { home, makingof, menu } from \"../data/data.json\";\nimport { Wrapper } from \"../components/Gallery\";\nimport PhotoLoader from \"../components/PhotoLoader\";\nimport Loader from \"../components/Loader\";\n\nconst PageWrapper = styled.div`\n  color: white;\n  background-color: black;\n  font-family: \"Raleway\", sans-serif;\n  ${Wrapper} : margin-top: 0.1rem;\n`;\n\nconst Header = styled.div`\n  padding-top: 1.25rem;\n  background-color: black;\n  height: 11.4rem;\n  @media (max-width: 768px) {\n    padding-top: 0.8rem;\n    height: 6.5rem;\n  }\n  @media (min-width: 1920px) {\n    padding-top: 10rem;\n    height: 35.4rem;\n  }\n`;\n\nconst Logo = styled.div`\n  width: 100%;\n  margin: 0 auto;\n  text-align: center;\n  &:hover {\n    cursor: pointer;\n  }\n  @media (max-width: 768px) {\n    width: 100%;\n    font-size: 0.8rem;\n  }\n`;\n\nconst LogoTitle = styled.div`\n  height: 4rem;\n  padding: 0.5rem 0;\n  content: url(\"./gatza.png\");\n  margin: 0 auto;\n  :before {\n    height: 4rem;\n    width: 241px;\n    padding: 0.5rem 0;\n    background-image: url(\"./gatza.png\");\n    background-size: auto 4rem;\n    display: inline-block;\n    content: \"\";\n    margin: 0 auto;\n    background-repeat: no-repeat;\n  }\n  @media (max-width: 768px) {\n    height: 1.8rem;\n    :before {\n      height: 1.8rem;\n      width: 108px;\n      background-size: auto 1.8rem;\n    }\n  }\n  @media (min-width: 1920px) {\n    height: 15rem;\n    :before {\n      height: 15rem;\n      width: 422px;\n      background-size: auto 15rem;\n    }\n  }\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  float: left;\n  margin: 0 auto;\n  background-color: white;\n`;\n\nconst Page = () => {\n  const [photosets, setPhotosets] = useState({});\n\n  const setPhotos = (photosetId, photos) => {\n    setPhotosets({ ...photosets, [photosetId]: photos });\n  };\n  const configurations = [\n    { minWidth: 480, cols: 7, margin: 1 },\n    { maxWidth: 479, cols: 4, margin: 1 }\n  ];\n\n  const Liburua = lazy(() => import(\"./Liburua\"));\n  const Berriak = lazy(() => import(\"./Berriak\"));\n  const Info = lazy(() => import(\"./Info\"));\n\n  return (\n    <HashRouter>\n      <PageWrapper>\n        <Header>\n          <Logo>\n            <LogoTitle />\n          </Logo>\n          <Menu items={menu} />\n        </Header>\n        <Container>\n          <Suspense fallback={<Loader />}>\n            <Route\n              exact\n              path={menu[0].path}\n              render={() => (\n                <PhotoLoader\n                  photosetId={home}\n                  photos={photosets[home]}\n                  setPhotos={setPhotos}\n                />\n              )}\n            />\n            <Route path={menu[1].path} component={Liburua} />\n            <Route\n              path={menu[2].path}\n              render={() => (\n                <PhotoLoader\n                  photosetId={makingof}\n                  photos={photosets[makingof]}\n                  setPhotos={setPhotos}\n                  configurations={configurations}\n                />\n              )}\n            />\n            <Route path={menu[3].path} component={Berriak} />\n            <Route path={menu[4].path} component={Info} />\n          </Suspense>\n        </Container>\n      </PageWrapper>\n    </HashRouter>\n  );\n};\n\nexport default Page;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Page from \"./screens/Page\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<Page />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}